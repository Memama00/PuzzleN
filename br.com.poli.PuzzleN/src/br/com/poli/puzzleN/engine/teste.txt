package br.com.poli.puzzleN.engine;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.util.ArrayList;

public class Ranking {
    private static final String address = "/home/gustavo/√Årea de Trabalho/PuzzleN/br.com.poli.PuzzleN/bin/br/com/poli/puzzleN/ranking/save.bin";
    private File file;
    private Save ranking;

    public Ranking() {

        file = new File(address);
        ObjectInputStream read;
        try {
            read = new ObjectInputStream(new FileInputStream(file));
            if (read.readObject() == null)
                ranking = new Save();
            else 
                ranking = (Save) read.readObject();
            read.close();
        } catch (IOException | ClassNotFoundException e) {
            e.printStackTrace();
        }

    }
    public void save(Puzzle partida) {
        if(ranking.add(partida)){
            try {
                ObjectOutputStream write = new ObjectOutputStream(new FileOutputStream(file));
                write.writeObject(ranking);
                write.close();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }

    public ArrayList<Puzzle> read(){
        return ranking;
    }
    private class Save extends ArrayList<Puzzle> implements Serializable {

        private static final long serialVersionUID = 3145839246335750366L;
        private static final char slash = '/';

        public Save() {
            super();
        }

        public Save(int i) {
            super(i);
        }

        public boolean add(Puzzle partida) {

            for (int i = 0; i < super.size(); i++)
                if (super.get(i).getScore().getPontos() < partida.getScore().getPontos()) {
                    super.add(i, partida);
                    return true;
                }
            return false;
        }

        public char getSlash() {
            return slash;
        }

    }

}

package br.com.poli.puzzleN.engine;

import java.io.Serializable;

public class Save implements Serializable {
    private Puzzle[] ranking;

    public Save() {
        ranking = new Puzzle[10];
    }

    public boolean add(Puzzle partida) {

        for (int i = 0; i < ranking.length; i++)
            if (ranking[i] == null)
                ranking[i] = partida;

            else if (ranking[i].getScore().getPontos() < partida.getScore().getPontos()) {
                ranking[i] = partida;
                return true;
            }
        return false;
    }

    public Puzzle[] getRanking() {
        return ranking;
    }

    public void setRanking(Puzzle[] ranking) {
        this.ranking = ranking;
    }

}